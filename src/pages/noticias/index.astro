---
import fs from "fs";
import path from "path";
import matter from "gray-matter";

import { Card } from "accessible-astro-components";
import DefaultLayout from "../../layouts/DefaultLayout.astro";

// Get all markdown and mdx files
const postsDir = path.resolve("src/content/blog");
const files = fs
  .readdirSync(postsDir)
  .filter((file) => file.endsWith(".md") || file.endsWith(".mdx"));

const posts = files.map((file) => {
  const content = fs.readFileSync(path.join(postsDir, file), "utf-8");
  const { data } = matter(content);

  return {
    title: data.title,
    description: data.description,
    heroImage: data.heroImage,
    publishDate: new Date(data.publishDate),
    status: data.status,
    slug: file.replace(/\.(md|mdx)$/, ""),
  };
});

// Filter posts based on status and publishDate
const now = new Date();
const visiblePosts = posts
  .filter((post) => {
    if (post.status === "down") return false;
    return post.status === "live" && post.publishDate <= now;
  })
  .sort((a, b) => b.publishDate - a.publishDate); // Sort by most recent first
---

<DefaultLayout title="Atualizações" description="Ultimas atualizações">
  <section class="my-20">
    <div class="space-content container">
      <h1>Atualizações</h1>
      <p class="text-2xl">Ultimas atualizações</p>
    </div>
  </section>

  <section class="my-12">
    <div class="container">
      <ul class="my-3">
        {visiblePosts.length === 0 && <p>No posts available</p>}

        {
          visiblePosts.map((post) => (
            <li>
              <Card
                url={
                  "/noticias/" + post.slug.replaceAll(" ", "-").toLowerCase()
                }
                title={post.title}
                footer={"Atualizado a: " + post.publishDate.toLocaleString()}
                img={post.heroImage}
              >
                <p>{post.description}</p>
              </Card>
            </li>
          ))
        }
      </ul>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .post-image {
    width: 100%;
    height: auto;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }
</style>
